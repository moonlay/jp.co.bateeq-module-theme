<?php
/**
 * Copyright © Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

/** @var \Magento\Customer\Block\Address\Edit $block */
?>

<?php $_company = $block->getLayout()->createBlock(\Magento\Customer\Block\Widget\Company::class) ?>
<?php $_telephone = $block->getLayout()->createBlock(\Magento\Customer\Block\Widget\Telephone::class) ?>
<?php $_fax = $block->getLayout()->createBlock(\Magento\Customer\Block\Widget\Fax::class) ?>

<form
  class="form-address-edit main-address-create delete-margin-edit-account"
  action="<?= $block->escapeUrl($block->getSaveUrl()) ?>"
  method="post"
  id="form-validate"
  enctype="multipart/form-data"
  data-hasrequired="<?= $block->escapeHtmlAttr(__('* Required Fields')) ?>"
>
  <fieldset class="fieldset width-main">
    <legend class="legend title2-addres-create">
      <span class="legen-title-edit-address"><?= $block->escapeHtml(__('Contact Information')) ?></span>
    </legend><br>

    <div class="fieldset div-contact-infomartion">
      <?= $block->getBlockHtml('formkey') ?>
      <input type="hidden" name="success_url" value="<?= $block->escapeUrl($block->getSuccessUrl()) ?>">
      <input type="hidden" name="error_url" value="<?= $block->escapeUrl($block->getErrorUrl()) ?>">

      <?= $block->getNameBlockHtml() ?>

      <?php if ($_telephone->isEnabled()) : ?>
        <?= $_telephone->setTelephone($block->getAddress()->getTelephone())->toHtml() ?>
      <?php endif ?>

      <?php if ($_fax->isEnabled()) : ?>
        <?= $_fax->setFax($block->getAddress()->getFax())->toHtml() ?>
      <?php endif ?>
    </div>
  </fieldset>

  <fieldset class="fieldset width-main">
    <legend class="legend title2-addres-create">
      <span class="legen-title-edit-address"><?= $block->escapeHtml(__('Address')) ?></span>
    </legend><br>

    <?php $_streetValidationClass = $this->helper(\Magento\Customer\Helper\Address::class)->getAttributeValidationClass('street'); ?>

    <div class="fieldset div-contact-infomartion">
      <div class="field zip required">
        <label class="label" for="zip">
          <span class="title-3-address-edit"><?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('postcode') ?></span>
        </label>
        <div class="control">
          <input
            type="text"
            name="postcode"
            value="<?= $block->escapeHtmlAttr($block->getAddress()->getPostcode()) ?>"
            title="<?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('postcode') ?>"
            id="zip"
            onkeyup="getAddressData()"
            class="input-text input-text-login validate-zip-international <?= $block->escapeHtmlAttr($this->helper(\Magento\Customer\Helper\Address::class)->getAttributeValidationClass('postcode')) ?>">
          <div role="alert" class="message warning" style="display:none">
            <span></span>
          </div>
        </div>
      </div>

      <?php if ($this->helper(\Magento\Customer\Helper\Address::class)->isVatAttributeVisible()) : ?>
        <div class="field taxvat">
          <label class="label" for="vat_id">
            <span><?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('vat_id') ?></span>
          </label>
          <div class="control">
            <input
              type="text"
              name="vat_id"
              value="<?= $block->escapeHtmlAttr($block->getAddress()->getVatId()) ?>"
              title="<?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('vat_id') ?>"
              class="input-text <?= $block->escapeHtmlAttr($this->helper(\Magento\Customer\Helper\Address::class)->getAttributeValidationClass('vat_id')) ?>"
              id="vat_id">
          </div>
        </div>
      <?php endif; ?>

      <div class="field region required">
        <label class="label" for="region_id">
          <span class="title-3-address-edit"><?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('region') ?></span>
        </label>
        <div class="control">
          <select
            id="region_id"
            name="region_id"
            title="<?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('region') ?>"
            class="validate-select region_id dropdown-register" <?= /* @noEscape */ !$block->getConfig('general/region/display_all') ? ' disabled="disabled"' : '' ?>>
            <option value=""><?= $block->escapeHtml(__('州州')) ?></option>
          </select>
          <input type="text"
            id="region"
            name="region"
            value="<?= $block->escapeHtmlAttr($block->getRegion()) ?>"
            title="<?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('region') ?>"
            class="input-text input-text-login validate-not-number-first <?= $block->escapeHtmlAttr($this->helper(\Magento\Customer\Helper\Address::class)->getAttributeValidationClass('region')) ?>"<?= !$block->getConfig('general/region/display_all') ? ' disabled="disabled"' : '' ?>/>
        </div>
      </div>

      <div class="field city required">
        <label class="label" for="city"><span class="title-3-address-edit"><?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('city') ?></span></label>
        <div class="control">
          <input
            type="text"
            name="city"
            value="<?= $block->escapeHtmlAttr($block->getAddress()->getCity()) ?>"
            title="<?= $block->escapeHtmlAttr(__('City')) ?>"
            class="input-text input-text-login <?= $block->escapeHtmlAttr($this->helper(\Magento\Customer\Helper\Address::class)->getAttributeValidationClass('city')) ?>"
            id="city"
        </div>
      </div>

      <div class="field street required">
        <label for="street_1" class="label">
          <span class="title-3-address-edit"><?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('street') ?></span>
        </label>
        <div class="control">
          <input
            type="text"
            name="street[]"
            value="<?= $block->escapeHtmlAttr($block->getStreetLine(1)) ?>"
            title="<?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('street') ?>"
            id="street_1"
            class="input-text input-text-login <?= $block->escapeHtmlAttr($_streetValidationClass) ?>"
          <div class="nested">
            <?php $_streetValidationClass = trim(str_replace('required-entry', '', $_streetValidationClass)); ?>
            <?php for ($_i = 1, $_n = $this->helper(\Magento\Customer\Helper\Address::class)->getStreetLines(); $_i < $_n; $_i++) : ?>
              <div class="field additional">
                <label class="label" for="street_<?= /* @noEscape */ $_i + 1 ?>">
                  <span><?= $block->escapeHtml(__('Street Address %1', $_i + 1)) ?></span>
                </label>
                <div class="control">
                  <input
                    type="text"
                    name="street[]"
                    value="<?= $block->escapeHtmlAttr($block->getStreetLine($_i + 1)) ?>"
                    title="<?= $block->escapeHtmlAttr(__('Street Address %1', $_i + 1)) ?>"
                    id="street_<?= /* @noEscape */ $_i + 1 ?>"
                    class="input-text input-text-login <?= $block->escapeHtmlAttr($_streetValidationClass) ?>">
                </div>
              </div>
            <?php endfor; ?>
          </div>
        </div>
      </div>

      <div class="field country required display-country">
        <label class="label" for="country">
          <span class="title-3-address-edit">
            <?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('country_id') ?>
          </span>
        </label>
        <div class="control">
          <?= $block->getCountryHtmlSelect()?>
        </div>
      </div>

      <?php if ($block->isDefaultBilling()) : ?>
        <span/>
      <?php elseif ($block->canSetAsDefaultBilling()) : ?>
        <div class="field choice set billing checkbox-lef">
          <input type="checkbox" id="primary_billing" name="default_billing" value="1" class="checkbox">
          <label class="label label-check-box" for="primary_billing">
            <span><?= $block->escapeHtml(__('Use as my default billing address')) ?></span>
          </label>
        </div>
      <?php else : ?>
        <input type="hidden" name="default_billing" value="1" />
      <?php endif; ?>

      <?php if ($block->isDefaultShipping()) : ?>
        <span/>
      <?php elseif ($block->canSetAsDefaultShipping()) : ?>
        <div class="field choice set shipping">
          <input type="checkbox" id="primary_shipping" name="default_shipping" value="1" class="checkbox">
          <label class="label label-check-box" for="primary_shipping">
            <span><?= $block->escapeHtml(__('Use as my default shipping address')) ?></span>
          </label>
        </div>
      <?php else : ?>
        <input type="hidden" name="default_shipping" value="1">
      <?php endif; ?>
    </div>
  </fieldset>

  <div class="actions-toolbar">
    <div class="primary width-buttom">
      <button
        type="submit"
        class="action save primary btn-edit-address"
        data-action="save-address"
        title="<?= $block->escapeHtmlAttr(__('Save Address')) ?>">
        <span><?= $block->escapeHtml(__('Save Address')) ?></span>
      </button>
    </div>
  </div>
</form>
<script type="text/x-magento-init">
{
  "#form-validate": {
    "addressValidation": {
      "postCodes": <?= /* @noEscape */ $block->getPostCodeConfig()->getSerializedPostCodes(); ?>
    }
  },
  "#country": {
    "regionUpdater": {
      "optionalRegionAllowed": <?= /* @noEscape */ $block->getConfig('general/region/display_all') ? 'true' : 'false' ?>,
      "regionListId": "#region_id",
      "regionInputId": "#region",
      "postcodeId": "#zip",
      "form": "#form-validate",
      "regionJson": <?= /* @noEscape */ $this->helper(\Magento\Directory\Helper\Data::class)->getRegionJson() ?>,
      "defaultRegion": "<?= (int) $block->getRegionId() ?>",
      "countriesWithOptionalZip": <?= /* @noEscape */ $this->helper(\Magento\Directory\Helper\Data::class)->getCountriesWithOptionalZip(true) ?>
    }
  }
}
</script>

<script>
// Init elements
const postcode = document.querySelector('[name=postcode]')
const region = document.querySelector('[name=region_id]')
const city = document.querySelector('[name=city]')

// Get default value from storage
postcode.value = localStorage.getItem("postcode");
region.options[region.selectedIndex].value = localStorage.getItem('region') || '';
region.options[region.selectedIndex].label = localStorage.getItem('regionLabel') || '州州';
city.value = localStorage.getItem("city");

function getAddressData() {
  const postcodePattern1 = new RegExp("^[0-9]{7}$");
  const postcodePattern2 = new RegExp("^[0-9]{3}\-[0-9]{4}$");
  if (postcodePattern1.test(postcode.value)) {
    const nameFile = postcode.value.substr(0, 3);
    fetch(`https://moonlay.github.io/yubinbango-data/data/${nameFile}.js`)
      .then(response => {
        if (response.ok) {
          return response.json();
        }
        return Promise.reject(response);
      })
      .then(data => {
        const regionValue = data[0].hasOwnProperty(postcode.value) && data[0][postcode.value][0];
        const cityValue = data[0].hasOwnProperty(postcode.value) ? data[0][postcode.value][1] : '';

        // Set value to storage
        localStorage.setItem("postcode", postcode.value);
        localStorage.setItem("region", regionValue);
        localStorage.setItem("city", cityValue);

        // Get value from storage
        postcode.value = localStorage.getItem("postcode");
        region.value = localStorage.getItem("region");
        city.value = localStorage.getItem("city");

        // Set region label to storage
        const regionLabel = region.options[region.selectedIndex].label;
        localStorage.setItem("regionLabel", regionLabel);
      })
      .catch(error => console.warning(error));
  } else if (postcodePattern2.test(postcode.value)) {
    const nameFile = postcode.value.substr(0, 3);
    fetch(`https://moonlay.github.io/yubinbango-data/data/${nameFile}.js`)
      .then(response => {
        if (response.ok) {
          return response.json();
        }
        return Promise.reject(response);
      })
      .then(data => {
        const postcodeModified = nameFile.concat(postcode.value.substr(4, 4))
        const regionValue = data[0].hasOwnProperty(postcodeModified) && data[0][postcodeModified][0];
        const cityValue = data[0].hasOwnProperty(postcodeModified) ? data[0][postcodeModified][1] : '';

        // Set value to storage
        localStorage.setItem("postcode", postcode.value);
        localStorage.setItem("region", regionValue);
        localStorage.setItem("city", cityValue);

        // Get value from storage
        postcode.value = localStorage.getItem("postcode");
        region.value = localStorage.getItem("region");
        city.value = localStorage.getItem("city");

        // Set region label to storage
        const regionLabel = region.options[region.selectedIndex].label;
        localStorage.setItem("regionLabel", regionLabel);
      })
      .catch(error => console.warning(error));
  } else {
    // Clean storage
    localStorage.setItem("postcode", postcode.value);
    localStorage.setItem("region", "");
    localStorage.setItem("regionLabel", "州州");
    localStorage.removeItem("city");

    // Clean fields
    region.options[region.selectedIndex].value = '';
    region.options[region.selectedIndex].label = '州州';
    city.value = '';
  }
}
</script>
